https://fullstackopen.com/en/part1/introduction_to_react#exercises-1-1-1-2

-----------------
Execise 1.1
-----------------

import React from "react";

const App = () => {
  const course = "Half Stack application development";
  const part1 = "Fundamentals of React";
  const exercises1 = 10;
  const part2 = "Using props to pass data";
  const exercises2 = 7;
  const part3 = "State of a component";
  const exercises3 = 14;

  return (
    <div>
      <Header course={course} />
      <Content
        part1={part1}
        part2={part2}
        part3={part3}
        exercises1={exercises1}
        exercises2={exercises2}
        exercises3={exercises3}
      />
      <Total
        exercises1={exercises1}
        exercises2={exercises2}
        exercises3={exercises3}
      />
    </div>
  );
};

const Header = (props) => {
  return (
    <div>
      <h1>{props.course}</h1>
    </div>
  );
};

const Content = (props) => {
  return (
    <div>
      <p>
        {props.part1}: {props.exercises1}
      </p>
      <p>
        {props.part2}: {props.exercises2}
      </p>
      <p>
        {props.part3}: {props.exercises3}
      </p>
    </div>
  );
};

const Total = (props) => {
  return (
    <div>
      <p>
        Number of exercises:{" "}
        {props.exercises1 + props.exercises2 + props.exercises3}
      </p>
    </div>
  );
};

export default App;

-------------------------
Exercise 1.2
-------------------------

import React from "react";

const App = () => {
  const course = "Half Stack application development";

  return (
    <div>
      <Header course={course} />
      <Content />
      <Total />
    </div>
  );
};

const Header = (props) => (
  <div>
    <h1>{props.course}</h1>
  </div>
);

const Total = () => {
  let num = 0;

  for (let i = 0; i < PartLists.length; i++) {
    num = num + PartLists[i].exercises;
  }

  return (
    <div>
      <p>Number of exercises: {num}</p>
    </div>
  );
};

const Content = () => {
  const lists = PartLists.map(function (list) {
    return (
      <div>
        <Part part={list.part} exercises={list.exercises} />
      </div>
    );
  });

  return lists;
};

const Part = (props) => (
  <div>
    <p>
      {props.part}: {props.exercises}
    </p>
  </div>
);

const PartLists = [
  {
    id: 1,
    part: "Fundamentals of React",
    exercises: 10,
  },
  {
    id: 2,
    part: "Using props to pass data",
    exercises: 7,
  },
  {
    id: 3,
    part: "State of a component",
    exercises: 14,
  },
];

export default App;





----------------------------------------------------
Execises 1.3 
----------------------------------------------------


import React from 'react';


const App = () => {
  const course = 'Half Stack application development'
  const part1 = {
    name: 'Fundamentals of React',
    exercises: 10
  }
  const part2 = {
    name: 'Using props to pass data',
    exercises: 7
  }
  const part3 = {
    name: 'State of a component',
    exercises: 14
  }

  return (
    <div>
      <h1>{course}</h1>
	  <p>{part1.name}: {part1.exercises}</p>
	  <p>{part2.name}: {part2.exercises}</p>
	  <p>{part3.name}: {part3.exercises}</p>
	  <p>Number of exercises: {part1.exercises + part2.exercises + part3.exercises}</p>
    </div>
  )
}


export default App;

-----------------------------------------
Exercise 1.4
-----------------------------------------

const App = () => {
  const course = "Half Stack application development";
  const parts = [
    {
      name: "Fundamentals of React",
      exercises: 10
    },
    {
      name: "Using props to pass data",
      exercises: 7
    },
    {
      name: "State of a component",
      exercises: 14
    }
  ]

  return (
    <div>
      <h1>{course}</h1>
      <p>
        {parts[0].name}: {parts[0].exercises}
      </p>
      <p>
        {parts[1].name}: {parts[1].exercises}
      </p>
      <p>
        {parts[2].name}: {parts[2].exercises}
      </p>
      <p>
        Number of exercises:{" "}
        {parts[0].exercises + parts[1].exercises + parts[2].exercises}
      </p>
    </div>
  );
};

export default App;


-----------------------------------------
Exercise 1.5
-----------------------------------------

const App = () => {
  const course = {
    name: "Half Stack application development",
    parts: [
      {
        name: "Fundamentals of React",
        exercises: 10,
      },
      {
        name: "Using props to pass data",
        exercises: 7,
      },
      {
        name: "State of a component",
        exercises: 14,
      },
    ],
  };

  return (
    <div>
      <h1>{course.name}</h1>
      <Content course={course} />
      <Total course={course} />
    </div>
  );
};

const Content = (props) => {
  const lists = props.course.parts.map((item) => {
    return (
      <div>
        <p key={item.id}>
          {item.name}: {item.exercises}
        </p>
      </div>
    );
  });
  return lists;
};

const Total = (props) => {
  let score = 0;

  const lists = props.course.parts.map((item) => {
    score = score + item.exercises;

    return score;
  });

  return (
    <div>
      <p>Number of exercises: {score}</p>
    </div>
  );
};

export default App;


----------------------------------
Exercise 1.5
----------------------------------

const App = () => {
  const course = {
    name: "Half Stack application development",
    parts: [
      {
        name: "Fundamentals of React",
        exercises: 10,
      },
      {
        name: "Using props to pass data",
        exercises: 7,
      },
      {
        name: "State of a component",
        exercises: 14,
      },
    ],
  };

  return (
    <div>
      <h1>{course.name}</h1>
      <Content course={course} />
      <Total course={course} />
    </div>
  );
};

const Content = (props) => {
  const lists = props.course.parts.map((item) => {
    return (
      <div>
        <p key={item.id}>
          {item.name}: {item.exercises}
        </p>
      </div>
    );
  });
  return lists;
};

const Total = (props) => {
  let score = 0;

  const lists = props.course.parts.map((item) => {
    score = score + item.exercises;

    return score;
  });

  return (
    <div>
      <p>Number of exercises: {score}</p>
    </div>
  );
};

export default App;




---------------------
Exercise 1.6
--------------------

import { useState } from "react";

const App = () => {
  // save clicks of each button to its own state
  const [good, setGood] = useState(0);
  const [neutral, setNeutral] = useState(0);
  const [bad, setBad] = useState(0);

  return (
    <div>
      <div>
        <h1>Give feedback</h1>
      </div>
      <button onClick={() => setGood(good + 1)}>good</button>
      <button onClick={() => setNeutral(neutral + 1)}>neutral</button>
      <button onClick={() => setBad(bad + 1)}>bad</button>
      <div>
        <h2>Statistics</h2>
      </div>
      <div>
        <p>Good: {good}</p>
      </div>
      <div>
        <p>Neutral: {neutral}</p>
      </div>
      <div>
        <p>Bad: {bad}</p>
      </div>
    </div>
  );
};

export default App;



------------------------------
Exercise 1.7
-------------------------------

import { useState } from "react";

const App = () => {
  // save clicks of each button to its own state
  const [good, setGood] = useState(0);
  const [neutral, setNeutral] = useState(0);
  const [bad, setBad] = useState(0);

  return (
    <div>
      <h1>Give feedback</h1>
      <br />
      <button onClick={() => setGood(good + 1)}>good</button>
      <button onClick={() => setNeutral(neutral + 1)}>neutral</button>
      <button onClick={() => setBad(bad + 1)}>bad</button>
      <br />
      <h2>Statistics</h2>
      <br />

      <p>Good: {good}</p>

      <p>Neutral: {neutral}</p>

      <p>Bad: {bad}</p>

      <p>All: {good + neutral + bad} </p>

      <p>Average: {(good + neutral + bad) / 3}</p>
      <p>
        Percentage of Positive feedback: {(good / (good + bad + neutral)) * 100}
      </p>
    </div>
  );
};

export default App;


---------------------
Exercise 1.8
----------------------

import { useState } from "react";

const Statistics = ({ good, neutral, bad }) => {
  return (
    <>
      <h2>Statistics</h2>
      <br />
      <p>Good: {good}</p>
      <p>Neutral: {neutral}</p>
      <p>Bad: {bad}</p>
      <p>All: {good + neutral + bad} </p>
      <p>Average: {(good + neutral + bad) / 3}</p>
      <p>
        Percentage of Positive feedback: {(good / (good + bad + neutral)) * 100}
      </p>
    </>
  );
};

const App = () => {
  // save clicks of each button to its own state
  const [good, setGood] = useState(0);
  const [neutral, setNeutral] = useState(0);
  const [bad, setBad] = useState(0);

  return (
    <div>
      <h1>Give feedback</h1>
      <br />
      <button onClick={() => setGood(good + 1)}>good</button>
      <button onClick={() => setNeutral(neutral + 1)}>neutral</button>
      <button onClick={() => setBad(bad + 1)}>bad</button>
      <br />
      <Statistics good={good} neutral={neutral} bad={bad} />
    </div>
  );
};

export default App;




--------
Exercise 1.9
------------


import { useState } from "react";

const Statistics = ({ good, neutral, bad }) => {
  const total = good + neutral + bad;

  if (total === 0) {
    return (
      <div>
        <h2>Statistics</h2>
        <div>no feedback given</div>
      </div>
    );
  }

  return (
    <>
      <h2>Statistics</h2>
      <br />
      <p>Good: {good}</p>
      <p>Neutral: {neutral}</p>
      <p>Bad: {bad}</p>
      <p>All: {good + neutral + bad} </p>
      <p>Average: {(good + neutral + bad) / 3}</p>
      <p>
        Percentage of Positive feedback: {(good / (good + bad + neutral)) * 100}
      </p>
    </>
  );
};

const App = () => {
  // save clicks of each button to its own state
  const [good, setGood] = useState(0);
  const [neutral, setNeutral] = useState(0);
  const [bad, setBad] = useState(0);

  return (
    <div>
      <h1>Give feedback</h1>
      <br />
      <button onClick={() => setGood(good + 1)}>good</button>
      <button onClick={() => setNeutral(neutral + 1)}>neutral</button>
      <button onClick={() => setBad(bad + 1)}>bad</button>
      <br />
      <Statistics good={good} neutral={neutral} bad={bad} />
    </div>
  );
};

export default App;


-------------------------
Exercise 1.10 (1.11)
-------------------------

import { useState } from "react";

const Button = ({ onClick, children }) => (
  <button onClick={onClick}> {children} </button>
);

const StatisticsLine = ({ label, value }) => {
  return (
    <>
      <br />
      <table>
        <tbody>
          <tr>
            <td>{label}</td>
            <td>{value}</td>
          </tr>
        </tbody>
      </table>
    </>
  );
};

const Statistics = ({ good, neutral, bad }) => {
  const total = good + neutral + bad;

  if (total === 0) {
    return (
      <div>
        <h2>Statistics</h2>
        <div>no feedback given</div>
      </div>
    );
  }

  return (
    <>
      <StatisticsLine label="good: " value={good} />
      <StatisticsLine label="neutral: " value={neutral} />
      <StatisticsLine label="bad: " value={bad} />
      <StatisticsLine label="All: " value={good + neutral + bad} />
      <StatisticsLine label="Average: " value={(good + neutral + bad) / 3} />
      <StatisticsLine
        label="Positive feedback %: "
        value={(good / (good + bad + neutral)) * 100}
      />
    </>
  );
};

const App = () => {
  // save clicks of each button to its own state
  const [good, setGood] = useState(0);
  const [neutral, setNeutral] = useState(0);
  const [bad, setBad] = useState(0);

  const handleNeutralClick = () => {
    setNeutral(neutral + 1);
  };
  const handleGoodClick = () => {
    setGood(good + 1);
  };
  const handleBadClick = () => {
    setBad(bad + 1);
  };

  return (
    <div>
      <h1>Give feedback</h1>
      <br />
      <Button onClick={handleGoodClick} children="good" />
      <Button onClick={handleBadClick} children="bad" />
      <Button onClick={handleNeutralClick} children="neutral" />
      <br />
      <Statistics good={good} neutral={neutral} bad={bad} />
    </div>
  );
};

export default App;


---------------------
Exercise 1.12*: anecdotes step1
---------------------------

import { useState } from "react";

const App = () => {
  const anecdotes = [
    "If it hurts, do it more often.",
    "Adding manpower to a late software project makes it later!",
    "The first 90 percent of the code accounts for the first 10 percent of the development time...The remaining 10 percent of the code accounts for the other 90 percent of the development time.",
    "Any fool can write code that a computer can understand. Good programmers write code that humans can understand.",
    "Premature optimization is the root of all evil.",
    "Debugging is twice as hard as writing the code in the first place. Therefore, if you write the code as cleverly as possible, you are, by definition, not smart enough to debug it.",
    "Programming without an extremely heavy use of console.log is same as if a doctor would refuse to use x-rays or blood tests when diagnosing patients.",
    "The only way to go fast, is to go well.",
  ];

  const [selected, setSelected] = useState(0);

  const handleClick = () => {
    setSelected(Math.floor(Math.random() * anecdotes.length));
  };

  return (
    <div>
      <button onClick={handleClick}>Click for anecdote</button>
      <br />
      <br />
      {anecdotes[selected]}
    </div>
  );
};

export default App;


